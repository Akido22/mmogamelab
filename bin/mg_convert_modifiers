#!/usr/bin/python2.6
# -*- coding: utf-8 -*-

from mg import *
from concurrence import dispatch, quit
from mg.core.projects import ProjectList
from mg.core.modifiers import *
from mg.constructor.common import ApplicationFactory
import os
import logging
import sys

class DBAlienModifier(CassandraObject):
    """
    DBAlienModifiers are stored in the main database. Special checker process regularly
    looks for expired modifiers in the single index
    """
    clsname = "AlienModifier"
    indexes = {
        "till": [[], "till"],
    }

class DBAlienModifierList(CassandraObjectList):
    objcls = DBAlienModifier

def main():
    try:
        inst = Instance("users")
        inst.cls = "metagam"
        inst.download_config()
        int_app = WebApplication(inst, "main", "ext")
        int_app.modules.load(["mg.core.worker.Worker", "mg.constructor.admin.Constructor"])
        inst.int_app = int_app
        appfactory = ApplicationFactory(inst)
        appfactory.add(int_app)
        inst.appfactory = appfactory
        lst = int_app.objlist(DBAlienModifierList, query_index="till")
        lst.load(silent=True)
        for ent in lst:
            print ent.data
            int_app.sql_write.do("insert into modifiers(till, cls, app, target_type, target) values (?, ?, ?, ?, ?)", ent.get("till"), ent.get("cls"), ent.get("app"), ent.get("target_type"), ent.get("target"))
        sys.stdout.flush()
        os._exit(0)
    except RuntimeError as e:
        logging.error(e)
        os._exit(1)
    except Exception as e:
        logging.exception(e)
        os._exit(1)

dispatch(main)

