#!/usr/bin/python2.6

from mg.core import Instance
from mg.web import WebDaemon, WebApplication
from concurrence import dispatch, Tasklet
from mg.cass import DatabasePool
from mg.memcached import MemcachedPool, Memcached
import traceback
import json

def main():
    try:
        # Running daemon
        inst = Instance()
        daemon = WebDaemon(inst)
        conf = daemon.download_config()
        dbpool = DatabasePool(conf["cassandra"])
        mc = Memcached(MemcachedPool(conf["memcached"][0]), prefix="mg_")
        app = WebApplication(inst, dbpool, "metagam", mc, "int")
        daemon.app = app
        app.modules.load(["mg.server.Server"])
        port = daemon.serve_any_port("0.0.0.0")
        app.server_id = port

        # Registering
        res = app.hooks.call("cluster.query_director", "/director/ready", {
            "type": "server",
            "port": port,
            "id": app.server_id,
            "params": json.dumps({
               "backend": 1
            })
        })
        inst.server_id = res["server_id"]
        while True:
            try:
                app.hooks.call("core.fastidle")
            except:
                traceback.print_exc()
            Tasklet.sleep(1)
    except RuntimeError as e:
        print e
        quit(1)
    except:
        traceback.print_exc()
        quit(1)

dispatch(main)

